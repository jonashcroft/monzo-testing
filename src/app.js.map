{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/_config.js","src/js/_get-transactions.js","src/js/_init.js","src/js/app.js","src/js/auth/_auth.js","src/js/auth/_connected.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const config = {\n    'clientId'     : 'oauth2client_00009YXx3nKAlmOlNhnrLF',\n    'clientSecret' : 'mnzconf.qysHN88KPApAuUMznZL8N3ib2tPGjR6YowRXghmEJC+Tj8aoihzNsz1LJYdxep46MrzvOGq9TsU9SRJWf/uM',\n\n    'redirectUrl'  : 'http://localhost:3000',\n    'monzoUrl'     : 'https://api.monzo.com',\n\n    'connectedDiv' :  document.getElementById('connected'),\n    'authDiv'      :  document.getElementById('authDiv')\n};\n\nexport default config;","import config from './_config.js';\n\nconst getTransactions = () => {\n\n    let transactionIDs = [];\n\n    const transEndpoint = `${config.monzoUrl}/transactions?account_id=${sessionStorage.getItem('accountId')}&limit=25`;\n\n    fetch( transEndpoint, {\n        'method': 'GET',\n        headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('accessToken')}`\n        }\n    })\n    .then( (data) => data.json() )\n    .then( (transResponse) => {\n\n        [...transResponse.transactions].forEach(element => {\n\n            transactionIDs.push( element['id'] );\n\n        });\n\n        getTransactionDetails( transactionIDs );\n\n\n    }).catch( function( error ) {\n\n        console.error(`Failed: ${error}`);\n\n    });\n\n};\n\n\nconst getTransactionDetails = (transactionIDs) => {\n\n    let combinedTransactions = [];\n    let combineTrans = {};\n\n    transactionIDs.forEach(function(ourTransaction) {\n\n        // console.log(ourTransaction);\n\n        let transactionDetail = `${config.monzoUrl}/transactions/${ourTransaction}?expand[]=merchant`;\n\n        fetch( transactionDetail, {\n            'method': 'GET',\n            headers: {\n                Authorization: `Bearer ${sessionStorage.getItem('accessToken')}`\n            }\n        })\n        .then( (data) => data.json() )\n        .then( (transactionResponse) => {\n\n            if (\n                transactionResponse.transaction.merchant &&\n                transactionResponse.transaction.merchant.online == false ) {\n\n                    let merchantInfo = transactionResponse.transaction.merchant;\n\n\n                    let transactionInfo = [\n                        'category', merchantInfo.category,\n                        'created', merchantInfo.created,\n                        'name', merchantInfo.name,\n                        'logo', merchantInfo.logo\n                    ];\n\n                    combinedTransactions.push(transactionInfo);\n\n\n                // console.dir( merchantInfo.address );\n\n                // console.log( merchantInfo.category );                // console.dir( transactionResponse.transaction );\n                // console.log( merchantInfo.created );\n                // console.log( merchantInfo.name );\n                // console.log( merchantInfo.logo );\n\n                // console.log\n\n                // combinedTransactions.push( transactionResponse.transaction.merchant );\n\n                // Object.assign( combineTrans, transactionResponse.transaction.merchant );\n\n                sessionStorage.setItem('transactionDetails', 'set');\n\n            }\n\n        }).catch( function( error ) {\n\n            console.error(`Failed: ${error}`);\n\n\n        });\n\n\n    });\n\n    // console.dir(combinedTransactions);\n\n    // console.log( combineTrans );\n\n    initMap(combinedTransactions);\n\n};\n\n\nwindow.initMap = ( combinedTransactions ) => {\n\n    let accessToken = sessionStorage.getItem('transactionDetails');\n    //     locations = [];\n\n    if ( typeof accessToken !== 'undefined' && accessToken !== null ) {\n\n        // console.dir(combineTrans);\n        console.dir(combinedTransactions);\n\n    }\n    else {\n        console.log('nah fam');\n    }\n\n\n    var locations = [\n        ['Bondi Beach', -33.890542, 151.274856, 4],\n        ['Coogee Beach', -33.923036, 151.259052, 5],\n        ['Cronulla Beach', -34.028249, 151.157507, 3],\n        ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],\n        ['Maroubra Beach', -33.950198, 151.259302, 1]\n      ];\n\n      var map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 10,\n        center: new google.maps.LatLng(-33.92, 151.25),\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      });\n\n      var infowindow = new google.maps.InfoWindow();\n\n      var marker, i;\n\n      for (i = 0; i < locations.length; i++) {\n        marker = new google.maps.Marker({\n          position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n          map: map\n        });\n\n        google.maps.event.addListener(marker, 'click', (function(marker, i) {\n          return function() {\n            infowindow.setContent(locations[i][0]);\n            infowindow.open(map, marker);\n          }\n        })(marker, i));\n      }\n\n};\n\n\nexport default getTransactions;","import config from './_config.js';\nimport { initConnect, getAuthCode } from './auth/_auth.js';\nimport connected from './auth/_connected.js';\n// import GoogleMapsApi from ''\n\nconst app = () => {\n\n    let accessToken = sessionStorage.getItem('accessToken');\n\n    if ( typeof accessToken !== 'undefined' && accessToken !== null ) {\n\n        connected();\n\n    }\n    else {\n\n        if ( getAuthCode('code') ) {\n\n            // If an auth code exists in the URL, not entirely sure this needs to be here\n            console.log('if getauthcode - code');\n\n        } else {\n\n            console.log('we need to connect');\n\n            initConnect();\n\n        }\n\n    }\n\n};\n\nexport default app;","import app from './_init.js';\n\napp();","import config from '../_config.js';\nimport connected from './_connected.js';\n\nconst initConnect = () => {\n\n    let authorise = document.getElementById('authBtn');\n\n    config.authDiv.classList.remove('inactive');\n    config.authDiv.classList.add('active');\n    config.connectedDiv.classList.remove('active');\n    config.connectedDiv.classList.add('inactive');\n\n    authorise.addEventListener('click', () => {\n\n        initAuth();\n\n    }, false);\n\n};\n\nconst initAuth = () => {\n\n    let authUrl = `https://auth.monzo.com/?client_id=${ config.clientId }&redirect_uri=${ config.redirectUrl }&response_type=code&state=${ Math.random().toString(23).substring(4) }`;\n\n    window.location.replace(authUrl);\n\n};\n\nconst getAuthCode = code => {\n\n    let accessCode = new URLSearchParams(document.location.search).get('code');\n\n    if ( accessCode ) {\n        getAccessToken( accessCode );\n    }\n\n\treturn accessCode;\n\n};\n\nconst getAccessToken = accessCode => {\n\n    console.log('get access token function');\n\n    const url = `${config.monzoUrl}/oauth2/token`;\n\n    const formData = new FormData();\n    formData.append('client_id', config.clientId);\n    formData.append('client_secret', config.clientSecret);\n    formData.append('code', accessCode);\n    formData.append('grant_type', 'authorization_code');\n    formData.append('redirect_uri', config.redirectUrl);\n\n    fetch ( url, {\n        method: 'POST',\n        body: formData\n    })\n    // .then( data => data.text() )\n    .then( (data) => data.json() )\n    .then( (authResponse) => {\n        console.log( authResponse );\n\n        sessionStorage.setItem('accessToken', authResponse.access_token);\n        sessionStorage.setItem('refreshToken', authResponse.refresh_token);\n\n        window.history.replaceState(null, null, window.location.pathname);\n\n        connected();\n\n    }).catch( function ( error ) {\n        console.log( 'failed: ', error );\n    });\n\n};\n\nexport { initConnect, initAuth, getAuthCode };\n","import config from '../_config.js';\nimport getTransactions from '../_get-transactions.js';\n\nconst connected = () => {\n\n    config.authDiv.classList.remove('active');\n    config.authDiv.classList.add('inactive');\n    config.connectedDiv.classList.remove('inactive');\n    config.connectedDiv.classList.add('active');\n\n    // console.log(`Our access token is: ${ sessionStorage.getItem('accessToken') }`);\n\n    // Uncomment when you need to verify connection with the API\n    pingMonzo();\n\n    if ( getMonzoAccount('monzoAccountID') ) {\n\n        getTransactions();\n\n    }\n    else {\n\n        console.log('no account id - do something here');\n\n    }\n\n};\n\n/*-------------\nQuick helper function to confirm with Monzo's server that we\n(the current user) are authenticated with the API\n--------------*/\nconst pingMonzo = () => {\n\n    const pingEndpoint = `${config.monzoUrl}/ping/whoami`;\n\n    fetch( pingEndpoint, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('accessToken')}`\n        }\n    })\n    .then( (data) => data.json() )\n    .then( (pingResponse) => {\n\n        console.table(pingResponse);\n\n    }).catch( function( error ) {\n\n        console.error(`Failed: ${error}`);\n\n    });\n\n};\n\n/*-------------\nGet the account ID of our preferred Monzo account,\nthis will only get (1) account and excludes prepaid\naccounts. If Monzo let users have multiple accounts\nin the future, this will need to change.\n\nIn fact - I haven't looked into Joint accounts so\nthis might not even work for those.\n--------------*/\nconst getMonzoAccount = ( monzoAccountID ) => {\n\n    const pingEndpoint = `${config.monzoUrl}/accounts?account_type=uk_retail`;\n\n    fetch( pingEndpoint, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('accessToken')}`\n        },\n    })\n    .then( (data) => data.json() )\n    .then( (accountsResp) => {\n\n        // console.table( accountsResp.accounts );\n        monzoAccountID = accountsResp.accounts[0].id;\n        sessionStorage.setItem('accountId', monzoAccountID );\n\n    }).catch( function( error ) {\n\n        console.error(`Failed: ${error}`);\n\n    });\n\n    return monzoAccountID;\n\n};\n\nexport default connected;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}