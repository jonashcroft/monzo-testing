{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/_auth.js","src/js/_config.js","src/js/_connected.js","src/js/_init.js","src/js/app.js"],"names":[],"mappings":"AAAA;;;;;;;;ACAA;;;;AACA;;;;;;AAEA,IAAM,cAAc,SAAd,WAAc,GAAM;;AAEtB,QAAI,YAAY,SAAS,cAAT,CAAwB,SAAxB,CAAhB;;AAEA,qBAAO,OAAP,CAAe,SAAf,CAAyB,MAAzB,CAAgC,UAAhC;AACA,qBAAO,OAAP,CAAe,SAAf,CAAyB,GAAzB,CAA6B,QAA7B;AACA,qBAAO,YAAP,CAAoB,SAApB,CAA8B,MAA9B,CAAqC,QAArC;AACA,qBAAO,YAAP,CAAoB,SAApB,CAA8B,GAA9B,CAAkC,UAAlC;;AAEA,cAAU,gBAAV,CAA2B,OAA3B,EAAoC,YAAM;;AAEtC;AAEH,KAJD,EAIG,KAJH;AAMH,CAfD;;AAiBA,IAAM,WAAW,SAAX,QAAW,GAAM;;AAEnB,QAAI,iDAAgD,iBAAO,QAAvD,sBAAkF,iBAAO,WAAzF,kCAAmI,KAAK,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,SAA3B,CAAqC,CAArC,CAAvI;;AAEA,WAAO,QAAP,CAAgB,OAAhB,CAAwB,OAAxB;AAEH,CAND;;AAQA,IAAM,cAAc,SAAd,WAAc,OAAQ;;AAExB,QAAI,aAAa,IAAI,eAAJ,CAAoB,SAAS,QAAT,CAAkB,MAAtC,EAA8C,GAA9C,CAAkD,MAAlD,CAAjB;;AAEA,QAAK,UAAL,EAAkB;AACd,uBAAgB,UAAhB;AACH;;AAEJ,WAAO,UAAP;AAEA,CAVD;;AAYA,IAAM,iBAAiB,SAAjB,cAAiB,aAAc;;AAEjC,YAAQ,GAAR,CAAY,2BAAZ;;AAEA,QAAM,MAAS,iBAAO,QAAhB,kBAAN;;AAEA,QAAM,WAAW,IAAI,QAAJ,EAAjB;AACA,aAAS,MAAT,CAAgB,WAAhB,EAA6B,iBAAO,QAApC;AACA,aAAS,MAAT,CAAgB,eAAhB,EAAiC,iBAAO,YAAxC;AACA,aAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAxB;AACA,aAAS,MAAT,CAAgB,YAAhB,EAA8B,oBAA9B;AACA,aAAS,MAAT,CAAgB,cAAhB,EAAgC,iBAAO,WAAvC;;AAEA,UAAQ,GAAR,EAAa;AACT,gBAAQ,MADC;AAET,cAAM;AAFG,KAAb;AAIA;AAJA,KAKC,IALD,CAKO,UAAC,IAAD;AAAA,eAAU,KAAK,IAAL,EAAV;AAAA,KALP,EAMC,IAND,CAMO,UAAC,YAAD,EAAkB;AACrB,gBAAQ,GAAR,CAAa,YAAb;;AAEA,uBAAe,OAAf,CAAuB,aAAvB,EAAsC,aAAa,YAAnD;AACA,uBAAe,OAAf,CAAuB,cAAvB,EAAuC,aAAa,aAApD;;AAEA,eAAO,OAAP,CAAe,YAAf,CAA4B,IAA5B,EAAkC,IAAlC,EAAwC,OAAO,QAAP,CAAgB,QAAxD;;AAEA;AAEH,KAhBD,EAgBG,KAhBH,CAgBU,UAAW,KAAX,EAAmB;AACzB,gBAAQ,GAAR,CAAa,UAAb,EAAyB,KAAzB;AACH,KAlBD;AAoBH,CAjCD;;QAmCS,W,GAAA,W;QAAa,Q,GAAA,Q;QAAU,W,GAAA,W;;;;;;;;AC3EhC,IAAM,SAAS;AACX,gBAAiB,qCADN;AAEX,oBAAiB,8FAFN;;AAIX,mBAAiB,uBAJN;AAKX,gBAAiB,uBALN;;AAOX,oBAAkB,SAAS,cAAT,CAAwB,WAAxB,CAPP;AAQX,eAAkB,SAAS,cAAT,CAAwB,SAAxB;AARP,CAAf;;kBAWe,M;;;;;;;;;ACXf;;;;;;AAEA,IAAM,YAAY,SAAZ,SAAY,GAAM;;AAEpB,qBAAO,OAAP,CAAe,SAAf,CAAyB,MAAzB,CAAgC,QAAhC;AACA,qBAAO,OAAP,CAAe,SAAf,CAAyB,GAAzB,CAA6B,UAA7B;AACA,qBAAO,YAAP,CAAoB,SAApB,CAA8B,MAA9B,CAAqC,UAArC;AACA,qBAAO,YAAP,CAAoB,SAApB,CAA8B,GAA9B,CAAkC,QAAlC;;AAEA;AACA,YAAQ,GAAR,2BAAqC,eAAe,OAAf,CAAuB,aAAvB,CAArC;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEH,CAjCD;;AAmCA;;;;AAIA,IAAM,kBAAkB,SAAlB,eAAkB,GAAM;;AAE1B,YAAQ,GAAR,CAAY,mBAAZ;;AAEA,QAAM,cAAiB,iBAAO,QAAxB,iBAAN;;AAEA,UAAO,WAAP,EAAoB;AAChB,gBAAQ,KADQ;AAEhB,iBAAS;AACL,uCAAyB,eAAe,OAAf,CAAuB,aAAvB;AADpB;AAFO,KAApB,EAMC,IAND,CAMO,UAAC,IAAD;AAAA,eAAU,KAAK,IAAL,EAAV;AAAA,KANP,EAOC,IAPD,CAOO,UAAC,YAAD,EAAkB;;AAErB,gBAAQ,KAAR,CAAc,YAAd;AAEH,KAXD,EAWG,KAXH,CAWU,UAAU,KAAV,EAAkB;;AAExB,gBAAQ,KAAR,cAAyB,KAAzB;AAEH,KAfD;AAmBH,CAzBD;;kBA2Be,S;;;;;;;;;ACpEf;;;;AACA;;AACA;;;;;;AAEA,IAAM,MAAM,SAAN,GAAM,GAAM;;AAEd,QAAI,cAAc,eAAe,OAAf,CAAuB,aAAvB,CAAlB;;AAEA,QAAK,OAAO,WAAP,KAAuB,WAAvB,IAAsC,gBAAgB,IAA3D,EAAkE;;AAE9D;;AAEA;AAEH,KAND,MAOK;;AAED,YAAK,uBAAY,MAAZ,CAAL,EAA2B;;AAEvB;;AAEH,SAJD,MAIO;;AAEH,oBAAQ,GAAR,CAAY,oBAAZ;;AAEA;AAEH;AAEJ;AAEJ,CA3BD;;kBA6Be,G;;;;;ACjCf;;;;;;AAEA","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import config from './_config.js';\nimport connected from './_connected.js';\n\nconst initConnect = () => {\n\n    let authorise = document.getElementById('authBtn');\n\n    config.authDiv.classList.remove('inactive');\n    config.authDiv.classList.add('active');\n    config.connectedDiv.classList.remove('active');\n    config.connectedDiv.classList.add('inactive');\n\n    authorise.addEventListener('click', () => {\n\n        initAuth();\n\n    }, false);\n\n};\n\nconst initAuth = () => {\n\n    let authUrl = `https://auth.monzo.com/?client_id=${ config.clientId }&redirect_uri=${ config.redirectUrl }&response_type=code&state=${ Math.random().toString(23).substring(4) }`;\n\n    window.location.replace(authUrl);\n\n};\n\nconst getAuthCode = code => {\n\n    let accessCode = new URLSearchParams(document.location.search).get('code');\n\n    if ( accessCode ) {\n        getAccessToken( accessCode );\n    }\n\n\treturn accessCode;\n\n};\n\nconst getAccessToken = accessCode => {\n\n    console.log('get access token function');\n\n    const url = `${config.monzoUrl}/oauth2/token`;\n\n    const formData = new FormData()\n    formData.append('client_id', config.clientId);\n    formData.append('client_secret', config.clientSecret);\n    formData.append('code', accessCode);\n    formData.append('grant_type', 'authorization_code');\n    formData.append('redirect_uri', config.redirectUrl);\n\n    fetch ( url, {\n        method: 'POST',\n        body: formData\n    })\n    // .then( data => data.text() )\n    .then( (data) => data.json() )\n    .then( (authResponse) => {\n        console.log( authResponse );\n\n        sessionStorage.setItem('accessToken', authResponse.access_token);\n        sessionStorage.setItem('refreshToken', authResponse.refresh_token);\n\n        window.history.replaceState(null, null, window.location.pathname);\n\n        connected();\n\n    }).catch( function ( error ) {\n        console.log( 'failed: ', error )\n    })\n\n}\n\nexport { initConnect, initAuth, getAuthCode }\n","const config = {\n    'clientId'     : 'oauth2client_00009YXx3nKAlmOlNhnrLF',\n    'clientSecret' : 'mnzconf.qysHN88KPApAuUMznZL8N3ib2tPGjR6YowRXghmEJC+Tj8aoihzNsz1LJYdxep46MrzvOGq9TsU9SRJWf/uM',\n\n    'redirectUrl'  : 'http://localhost:3000',\n    'monzoUrl'     : 'https://api.monzo.com',\n\n    'connectedDiv' :  document.getElementById('connected'),\n    'authDiv'      :  document.getElementById('authDiv')\n}\n\nexport default config;","import config from './_config.js';\n\nconst connected = () => {\n\n    config.authDiv.classList.remove('active');\n    config.authDiv.classList.add('inactive');\n    config.connectedDiv.classList.remove('inactive');\n    config.connectedDiv.classList.add('active');\n\n    // console.log(`Access Token is set: ${ sessionStorage.getItem('accessToken') } `);\n    console.log(`Our access token is: ${ sessionStorage.getItem('accessToken') }`);\n\n\n    getUsersAccount();\n\n    // const transactionsUrl = 'https://api.monzo.com/transactions',\n    //       formData = new FormData();\n    //       formData.append('account_id');\n\n    // fetch( transactionsUrl, {\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/x-www-form-urlencoded'\n    //     },\n    //     body: formData\n    // })\n    // .then( (data) => data.json() )\n    // .then( (transResponse) => {\n\n    //     console.table( transResponse );;\n\n    // }).catch( function( error ) {\n    //     console.log(`Failed: ${error}`);\n    // });\n\n}\n\n/*-------------\nThe user could have multiple accounts, so here we'll\nget them to select their account (duh)\n--------------*/\nconst getUsersAccount = () => {\n\n    console.log('get users account');\n\n    const accountsEnd = `${config.monzoUrl}/ping/whoami`;\n\n    fetch( accountsEnd, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('accessToken')}`\n        }\n    })\n    .then( (data) => data.json() )\n    .then( (accountsResp) => {\n\n        console.table(accountsResp);\n\n    }).catch( function( error ) {\n\n        console.error(`Failed: ${error}`);\n\n    });\n\n\n\n}\n\nexport default connected;","import config from './_config.js';\nimport { initConnect, getAuthCode } from './_auth.js';\nimport connected from './_connected.js';\n\nconst app = () => {\n\n    let accessToken = sessionStorage.getItem('accessToken');\n\n    if ( typeof accessToken !== 'undefined' && accessToken !== null ) {\n\n        // console.log(`access token is set to: ${ sessionStorage.getItem('accessToken') } `);\n\n        connected();\n\n    }\n    else {\n\n        if ( getAuthCode('code') ) {\n\n            // If an auth code exists in the URL, not entirely sure this needs to be here\n\n        } else {\n\n            console.log('we need to connect');\n\n            initConnect();\n\n        }\n\n    }\n\n};\n\nexport default app;","import app from './_init.js';\n\napp();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvX2F1dGguanMiLCJzcmMvanMvX2NvbmZpZy5qcyIsInNyYy9qcy9fY29ubmVjdGVkLmpzIiwic3JjL2pzL19pbml0LmpzIiwic3JjL2pzL2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUNBQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNLGNBQWMsU0FBZCxXQUFjLEdBQU07O0FBRXRCLFFBQUksWUFBWSxTQUFTLGNBQVQsQ0FBd0IsU0FBeEIsQ0FBaEI7O0FBRUEscUJBQU8sT0FBUCxDQUFlLFNBQWYsQ0FBeUIsTUFBekIsQ0FBZ0MsVUFBaEM7QUFDQSxxQkFBTyxPQUFQLENBQWUsU0FBZixDQUF5QixHQUF6QixDQUE2QixRQUE3QjtBQUNBLHFCQUFPLFlBQVAsQ0FBb0IsU0FBcEIsQ0FBOEIsTUFBOUIsQ0FBcUMsUUFBckM7QUFDQSxxQkFBTyxZQUFQLENBQW9CLFNBQXBCLENBQThCLEdBQTlCLENBQWtDLFVBQWxDOztBQUVBLGNBQVUsZ0JBQVYsQ0FBMkIsT0FBM0IsRUFBb0MsWUFBTTs7QUFFdEM7QUFFSCxLQUpELEVBSUcsS0FKSDtBQU1ILENBZkQ7O0FBaUJBLElBQU0sV0FBVyxTQUFYLFFBQVcsR0FBTTs7QUFFbkIsUUFBSSxpREFBZ0QsaUJBQU8sUUFBdkQsc0JBQWtGLGlCQUFPLFdBQXpGLGtDQUFtSSxLQUFLLE1BQUwsR0FBYyxRQUFkLENBQXVCLEVBQXZCLEVBQTJCLFNBQTNCLENBQXFDLENBQXJDLENBQXZJOztBQUVBLFdBQU8sUUFBUCxDQUFnQixPQUFoQixDQUF3QixPQUF4QjtBQUVILENBTkQ7O0FBUUEsSUFBTSxjQUFjLFNBQWQsV0FBYyxPQUFROztBQUV4QixRQUFJLGFBQWEsSUFBSSxlQUFKLENBQW9CLFNBQVMsUUFBVCxDQUFrQixNQUF0QyxFQUE4QyxHQUE5QyxDQUFrRCxNQUFsRCxDQUFqQjs7QUFFQSxRQUFLLFVB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LFlBQUQsRUFBa0I7O0FBRXJCLGdCQUFRLEtBQVIsQ0FBYyxZQUFkO0FBRUgsS0FYRCxFQVdHLEtBWEgsQ0FXVSxVQUFVLEtBQVYsRUFBa0I7O0FBRXhCLGdCQUFRLEtBQVIsY0FBeUIsS0FBekI7QUFFSCxLQWZEO0FBbUJILENBekJEOztrQkEyQmUsUzs7Ozs7Ozs7O0FDcEVmOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLElBQU0sTUFBTSxTQUFOLEdBQU0sR0FBTTs7QUFFZCxRQUFJLGNBQWMsZUFBZSxPQUFmLENBQXVCLGFBQXZCLENBQWxCOztBQUVBLFFBQUssT0FBTyxXQUFQLEtBQXVCLFdBQXZCLElBQXNDLGdCQUFnQixJQUEzRCxFQUFrRTs7QUFFOUQ7O0FBRUE7QUFFSCxLQU5ELE1BT0s7O0FBRUQsWUFBSyx1QkFBWSxNQUFaLENBQUwsRUFBMkI7O0FBRXZCOztBQUVILFNBSkQsTUFJTzs7QUFFSCxvQkFBUSxHQUFSLENBQVksb0JBQVo7O0FBRUE7QUFFSDtBQUVKO0FBRUosQ0EzQkQ7O2tCQTZCZSxHOzs7OztBQ2pDZjs7Ozs7O0FBRUEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpbXBvcnQgY29uZmlnIGZyb20gJy4vX2NvbmZpZy5qcyc7XG5pbXBvcnQgY29ubmVjdGVkIGZyb20gJy4vX2Nvbm5lY3RlZC5qcyc7XG5cbmNvbnN0IGluaXRDb25uZWN0ID0gKCkgPT4ge1xuXG4gICAgbGV0IGF1dGhvcmlzZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhdXRoQnRuJyk7XG5cbiAgICBjb25maWcuYXV0aERpdi5jbGFzc0xpc3QucmVtb3ZlKCdpbmFjdGl2ZScpO1xuICAgIGNvbmZpZy5hdXRoRGl2LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuICAgIGNvbmZpZy5jb25uZWN0ZWREaXYuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgY29uZmlnLmNvbm5lY3RlZERpdi5jbGFzc0xpc3QuYWRkKCdpbmFjdGl2ZScpO1xuXG4gICAgYXV0aG9yaXNlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXG4gICAgICAgIGluaXRBdXRoKCk7XG5cbiAgICB9LCBmYWxzZSk7XG5cbn07XG5cbmNvbnN0IGluaXRBdXRoID0gKCkgPT4ge1xuXG4gICAgbGV0IGF1dGhVcmwgPSBgaHR0cHM6Ly9hdXRoLm1vbnpvLmNvbS8/Y2xpZW50X2lkPSR7IGNvbmZpZy5jbGllbnRJZCB9JnJlZGlyZWN0X3VyaT0keyBjb25maWcucmVkaXJlY3RVcmwgfSZyZXNwb25zZV90eXBlPWNvZGUmc3RhdGU9JHsgTWF0aC5yYW5kb20oKS50b1N0cmluZygyMykuc3Vic3RyaW5nKDQpIH1gO1xuXG4gICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoYXV0aFVybCk7XG5cbn07XG5cbmNvbnN0IGdldEF1dGhDb2RlID0gY29kZSA9PiB7XG5cbiAgICBsZXQgYWNjZXNzQ29kZSA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoZG9jdW1lbnQubG9jYXRpb24uc2VhcmNoKS5nZXQoJ2NvZGUnKTtcblxuICAgIGlmICggYWNjZXNzQ29kZSApIHtcbiAgICAgICAgZ2V0QWNjZXNzVG9rZW4oIGFjY2Vzc0NvZGUgKTtcbiAgICB9XG5cblx0cmV0dXJuIGFjY2Vzc0NvZGU7XG5cbn07XG5cbmNvbnN0IGdldEFjY2Vzc1Rva2VuID0gYWNjZXNzQ29kZSA9PiB7XG5cbiAgICBjb25zb2xlLmxvZygnZ2V0IGFjY2VzcyB0b2tlbiBmdW5jdGlvbicpO1xuXG4gICAgY29uc3QgdXJsID0gYCR7Y29uZmlnLm1vbnpvVXJsfS9vYXV0aDIvdG9rZW5gO1xuXG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxuICAgIGZvcm1EYXRhLmFwcGVuZCgnY2xpZW50X2lkJywgY29uZmlnLmNsaWVudElkKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2NsaWVudF9zZWNyZXQnLCBjb25maWcuY2xpZW50U2VjcmV0KTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2NvZGUnLCBhY2Nlc3NDb2RlKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2dyYW50X3R5cGUnLCAnYXV0aG9yaXphdGlvbl9jb2RlJyk7XG4gICAgZm9ybURhdGEuYXBwZW5kKCdyZWRpcmVjdF91cmknLCBjb25maWcucmVkaXJlY3RVcmwpO1xuXG4gICAgZmV0Y2ggKCB1cmwsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGJvZHk6IGZvcm1EYXRhXG4gICAgfSlcbiAgICAvLyAudGhlbiggZGF0YSA9PiBkYXRhLnRleHQoKSApXG4gICAgLnRoZW4oIChkYXRhKSA9PiBkYXRhLmpzb24oKSApXG4gICAgLnRoZW4oIChhdXRoUmVzcG9uc2UpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coIGF1dGhSZXNwb25zZSApO1xuXG4gICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ2FjY2Vzc1Rva2VuJywgYXV0aFJlc3BvbnNlLmFjY2Vzc190b2tlbik7XG4gICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3JlZnJlc2hUb2tlbicsIGF1dGhSZXNwb25zZS5yZWZyZXNoX3Rva2VuKTtcblxuICAgICAgICB3aW5kb3cuaGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCwgbnVsbCwgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKTtcblxuICAgICAgICBjb25uZWN0ZWQoKTtcblxuICAgIH0pLmNhdGNoKCBmdW5jdGlvbiAoIGVycm9yICkge1xuICAgICAgICBjb25zb2xlLmxvZyggJ2ZhaWxlZDogJywgZXJyb3IgKVxuICAgIH0pXG5cbn1cblxuZXhwb3J0IHsgaW5pdENvbm5lY3QsIGluaXRBdXRoLCBnZXRBdXRoQ29kZSB9XG4iLCJjb25zdCBjb25maWcgPSB7XG4gICAgJ2NsaWVudElkJyAgICAgOiAnb2F1dGgyY2xpZW50XzAwMDA5WVh4M25LQWxtT2xOaG5yTEYnLFxuICAgICdjbGllbnRTZWNyZXQnIDogJ21uemNvbmYucXlzSE44OEtQQXBBdVVNem5aTDhOM2liMnRQR2pSNllvd1JYZ2htRUpDK1RqOGFvaWh6TnN6MUxKWWR4ZXA0Nk1yenZPR3E5VHNVOVNSSldmL3VNJyxcblxuICAgICdyZWRpcmVjdFVybCcgIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcsXG4gICAgJ21vbnpvVXJsJyAgICAgOiAnaHR0cHM6Ly9hcGkubW9uem8uY29tJyxcblxuICAgICdjb25uZWN0ZWREaXYnIDogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb25uZWN0ZWQnKSxcbiAgICAnYXV0aERpdicgICAgICA6ICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXV0aERpdicpXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZzsiLCJpbXBvcnQgY29uZmlnIGZyb20gJy4vX2NvbmZpZy5qcyc7XG5cbmNvbnN0IGNvbm5lY3RlZCA9ICgpID0+IHtcblxuICAgIGNvbmZpZy5hdXRoRGl2LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgIGNvbmZpZy5hdXRoRGl2LmNsYXNzTGlzdC5hZGQoJ2luYWN0aXZlJyk7XG4gICAgY29uZmlnLmNvbm5lY3RlZERpdi5jbGFzc0xpc3QucmVtb3ZlKCdpbmFjdGl2ZScpO1xuICAgIGNvbmZpZy5jb25uZWN0ZWREaXYuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG5cbiAgICAvLyBjb25zb2xlLmxvZyhgQWNjZXNzIFRva2VuIGlzIHNldDogJHsgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnYWNjZXNzVG9rZW4nKSB9IGApO1xuICAgIGNvbnNvbGUubG9nKGBPdXIgYWNjZXNzIHRva2VuIGlzOiAkeyBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NUb2tlbicpIH1gKTtcblxuXG4gICAgZ2V0VXNlcnNBY2NvdW50KCk7XG5cbiAgICAvLyBjb25zdCB0cmFuc2FjdGlvbnNVcmwgPSAnaHR0cHM6Ly9hcGkubW9uem8uY29tL3RyYW5zYWN0aW9ucycsXG4gICAgLy8gICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAvLyAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2FjY291bnRfaWQnKTtcblxuICAgIC8vIGZldGNoKCB0cmFuc2FjdGlvbnNVcmwsIHtcbiAgICAvLyAgICAgaGVhZGVyczoge1xuICAgIC8vICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAvLyAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xuICAgIC8vICAgICB9LFxuICAgIC8vICAgICBib2R5OiBmb3JtRGF0YVxuICAgIC8vIH0pXG4gICAgLy8gLnRoZW4oIChkYXRhKSA9PiBkYXRhLmpzb24oKSApXG4gICAgLy8gLnRoZW4oICh0cmFuc1Jlc3BvbnNlKSA9PiB7XG5cbiAgICAvLyAgICAgY29uc29sZS50YWJsZSggdHJhbnNSZXNwb25zZSApOztcblxuICAgIC8vIH0pLmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKGBGYWlsZWQ6ICR7ZXJyb3J9YCk7XG4gICAgLy8gfSk7XG5cbn1cblxuLyotLS0tLS0tLS0tLS0tXG5UaGUgdXNlciBjb3VsZCBoYXZlIG11bHRpcGxlIGFjY291bnRzLCBzbyBoZXJlIHdlJ2xsXG5nZXQgdGhlbSB0byBzZWxlY3QgdGhlaXIgYWNjb3VudCAoZHVoKVxuLS0tLS0tLS0tLS0tLS0qL1xuY29uc3QgZ2V0VXNlcnNBY2NvdW50ID0gKCkgPT4ge1xuXG4gICAgY29uc29sZS5sb2coJ2dldCB1c2VycyBhY2NvdW50Jyk7XG5cbiAgICBjb25zdCBhY2NvdW50c0VuZCA9IGAke2NvbmZpZy5tb256b1VybH0vcGluZy93aG9hbWlgO1xuXG4gICAgZmV0Y2goIGFjY291bnRzRW5kLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NUb2tlbicpfWBcbiAgICAgICAgfVxuICAgIH0pXG4gICAgLnRoZW4oIChkYXRhKSA9PiBkYXRhLmpzb24oKSApXG4gICAgLnRoZW4oIChhY2NvdW50c1Jlc3ApID0+IHtcblxuICAgICAgICBjb25zb2xlLnRhYmxlKGFjY291bnRzUmVzcCk7XG5cbiAgICB9KS5jYXRjaCggZnVuY3Rpb24oIGVycm9yICkge1xuXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYEZhaWxlZDogJHtlcnJvcn1gKTtcblxuICAgIH0pO1xuXG5cblxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0ZWQ7IiwiaW1wb3J0IGNvbmZpZyBmcm9tICcuL19jb25maWcuanMnO1xuaW1wb3J0IHsgaW5pdENvbm5lY3QsIGdldEF1dGhDb2RlIH0gZnJvbSAnLi9fYXV0aC5qcyc7XG5pbXBvcnQgY29ubmVjdGVkIGZyb20gJy4vX2Nvbm5lY3RlZC5qcyc7XG5cbmNvbnN0IGFwcCA9ICgpID0+IHtcblxuICAgIGxldCBhY2Nlc3NUb2tlbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzc1Rva2VuJyk7XG5cbiAgICBpZiAoIHR5cGVvZiBhY2Nlc3NUb2tlbiAhPT0gJ3VuZGVmaW5lZCcgJiYgYWNjZXNzVG9rZW4gIT09IG51bGwgKSB7XG5cbiAgICAgICAgLy8gY29uc29sZS5sb2coYGFjY2VzcyB0b2tlbiBpcyBzZXQgdG86ICR7IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzc1Rva2VuJykgfSBgKTtcblxuICAgICAgICBjb25uZWN0ZWQoKTtcblxuICAgIH1cbiAgICBlbHNlIHtcblxuICAgICAgICBpZiAoIGdldEF1dGhDb2RlKCdjb2RlJykgKSB7XG5cbiAgICAgICAgICAgIC8vIElmIGFuIGF1dGggY29kZSBleGlzdHMgaW4gdGhlIFVSTCwgbm90IGVudGlyZWx5IHN1cmUgdGhpcyBuZWVkcyB0byBiZSBoZXJlXG5cbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgY29uc29sZS5sb2coJ3dlIG5lZWQgdG8gY29ubmVjdCcpO1xuXG4gICAgICAgICAgICBpbml0Q29ubmVjdCgpO1xuXG4gICAgICAgIH1cblxuICAgIH1cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwOyIsImltcG9ydCBhcHAgZnJvbSAnLi9faW5pdC5qcyc7XG5cbmFwcCgpOyJdfQ=="}