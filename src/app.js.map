{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/_auth.js","src/js/_config.js","src/js/_connected.js","src/js/_init.js","src/js/_initConnect.js","src/js/app.js"],"names":[],"mappings":"AAAA;;;;;;;;ACAA;;;;;;AAEA,IAAM,WAAW,SAAX,QAAW,GAAM;;AAEnB,QAAI,iDAAgD,iBAAO,QAAvD,sBAAkF,WAAlF,kCAA4H,KAAK,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,SAA3B,CAAqC,CAArC,CAAhI;;AAEA,WAAO,QAAP,CAAgB,OAAhB,CAAwB,OAAxB;AAEH,CAND;;AAQA,IAAM,cAAc,SAAd,WAAc,OAAQ;;AAExB,QAAI,aAAa,IAAI,eAAJ,CAAoB,SAAS,QAAT,CAAkB,MAAtC,EAA8C,GAA9C,CAAkD,MAAlD,CAAjB;;AAEA,QAAK,UAAL,EAAkB;AACd,uBAAgB,UAAhB;AACH;;AAEJ,WAAO,UAAP;AAEA,CAVD;;AAYA,IAAM,iBAAiB,SAAjB,cAAiB,aAAc;;AAEjC,QAAM,MAAM,oCAAZ;;AAEA,QAAM,WAAW,IAAI,QAAJ,EAAjB;AACA,aAAS,MAAT,CAAgB,WAAhB,EAA6B,iBAAO,QAApC;AACA,aAAS,MAAT,CAAgB,eAAhB,EAAiC,iBAAO,YAAxC;AACA,aAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAxB;AACA,aAAS,MAAT,CAAgB,YAAhB,EAA8B,oBAA9B;AACA,aAAS,MAAT,CAAgB,cAAhB,EAAgC,iBAAO,WAAvC;;AAEA,UAAQ,GAAR,EAAa;AACT,gBAAQ,MADC;AAET,cAAM;AAFG,KAAb,EAIC,IAJD,CAIO;AAAA,eAAQ,KAAK,IAAL,EAAR;AAAA,KAJP,EAKC,IALD,CAKO,UAAC,IAAD,EAAU;AACb,gBAAQ,GAAR,CAAa,qBAAb,EAAoC,IAApC;AACH,KAPD,EAOG,KAPH,CAOU,UAAW,KAAX,EAAmB;AACzB,gBAAQ,GAAR,CAAa,UAAb,EAAyB,KAAzB;AACH,KATD;AAWH,CAtBD;;QAwBS,Q,GAAA,Q;QAAU,W,GAAA,W;;;;;;;;AC9CnB,IAAM,SAAS;AACX,gBAAgB,qCADL;AAEX,oBAAgB,8FAFL;AAGX,mBAAgB;AAHL,CAAf;;kBAMe,M;;;;;;;;ACNf,IAAM,YAAY,SAAZ,SAAY,GAAM;;AAEpB,YAAQ,GAAR,CAAY,WAAZ;AAEH,CAJD;;kBAMe,S;;;;;;;;;ACNf;;;;AACA;;AACA;;;;AACA;;;;AAEA,IAAM,MAAM,SAAN,GAAM,GAAM;;AAEd,QAAK,uBAAY,MAAZ,CAAL,EAA2B;;AAEvB;;AAEA,gBAAQ,GAAR,CAAY,oBAAZ;;AAEA;;AAGH,KATD,MASO;;AAEH,gBAAQ,GAAR,CAAY,oBAAZ;;AAEA;AAEH;AAEJ,CAnBD;;kBAqBe,G;;;;;;;;;AC1Bf;;;;AACA;;;;AAEA,IAAM,cAAc,SAAd,WAAc,GAAM;;AAEtB,QAAI,UAAU,SAAS,cAAT,CAAwB,MAAxB,CAAd;;AAEA,YAAQ,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;;AAEpC;AAEH,KAJD,EAIG,KAJH;AAMH,CAVD;;kBAYe,W;;;;;ACff;;;;;;AAEA","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import config from './_config.js';\n\nconst initAuth = () => {\n\n    let authUrl = `https://auth.monzo.com/?client_id=${ config.clientId }&redirect_uri=${ redirectUrl }&response_type=code&state=${ Math.random().toString(23).substring(4) }`;\n\n    window.location.replace(authUrl);\n\n};\n\nconst getAuthCode = code => {\n\n    let accessCode = new URLSearchParams(document.location.search).get('code');\n\n    if ( accessCode ) {\n        getAccessToken( accessCode );\n    }\n\n\treturn accessCode;\n\n};\n\nconst getAccessToken = accessCode => {\n\n    const url = 'https://api.monzo.com/oauth2/token';\n\n    const formData = new FormData()\n    formData.append('client_id', config.clientId);\n    formData.append('client_secret', config.clientSecret);\n    formData.append('code', accessCode);\n    formData.append('grant_type', 'authorization_code');\n    formData.append('redirect_uri', config.redirectUrl);\n\n    fetch ( url, {\n        method: 'POST',\n        body: formData\n    })\n    .then( data => data.text() )\n    .then( (text) => {\n        console.log( 'success, response: ', text )\n    }).catch( function ( error ) {\n        console.log( 'failed: ', error )\n    })\n\n}\n\nexport { initAuth, getAuthCode }\n","const config = {\n    'clientId'    : 'oauth2client_00009YXx3nKAlmOlNhnrLF',\n    'clientSecret': 'mnzconf.qysHN88KPApAuUMznZL8N3ib2tPGjR6YowRXghmEJC+Tj8aoihzNsz1LJYdxep46MrzvOGq9TsU9SRJWf/uM',\n    'redirectUrl' : 'http://localhost:3000'\n}\n\nexport default config;","const connected = () => {\n\n    console.log('well done');\n\n}\n\nexport default connected;","import config from './_config.js';\nimport { getAuthCode } from './_auth.js';\nimport initConnect from './_initConnect.js';\nimport { connected } from './_connected.js';\n\nconst app = () => {\n\n    if ( getAuthCode('code') ) {\n\n        // connected();\n\n        console.log('we have auth code!');\n\n        // Do something here once we have auth and clean it up\n\n\n    } else {\n\n        console.log('we need to connect');\n\n        initConnect();\n\n    }\n\n};\n\nexport default app;","import config from './_config.js';\nimport { initAuth } from './_auth.js';\n\nconst initConnect = () => {\n\n    let element = document.getElementById('auth');\n\n    element.addEventListener('click', () => {\n\n        initAuth();\n\n    }, false);\n\n};\n\nexport default initConnect;","import app from './_init.js';\n\napp();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvX2F1dGguanMiLCJzcmMvanMvX2NvbmZpZy5qcyIsInNyYy9qcy9fY29ubmVjdGVkLmpzIiwic3JjL2pzL19pbml0LmpzIiwic3JjL2pzL19pbml0Q29ubmVjdC5qcyIsInNyYy9qcy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FDQUE7Ozs7OztBQUVBLElBQU0sV0FBVyxTQUFYLFFBQVcsR0FBTTs7QUFFbkIsUUFBSSxpREFBZ0QsaUJBQU8sUUFBdkQsc0JBQWtGLFdBQWxGLGtDQUE0SCxLQUFLLE1BQUwsR0FBYyxRQUFkLENBQXVCLEVBQXZCLEVBQTJCLFNBQTNCLENBQXFDLENBQXJDLENBQWhJOztBQUVBLFdBQU8sUUFBUCxDQUFnQixPQUFoQixDQUF3QixPQUF4QjtBQUVILENBTkQ7O0FBUUEsSUFBTSxjQUFjLFNBQWQsV0FBYyxPQUFROztBQUV4QixRQUFJLGFBQWEsSUFBSSxlQUFKLENBQW9CLFNBQVMsUUFBVCxDQUFrQixNQUF0QyxFQUE4QyxHQUE5QyxDQUFrRCxNQUFsRCxDQUFqQjs7QUFFQSxRQUFLLFVBQUwsRUFBa0I7QUFDZCx1QkFBZ0IsVUFBaEI7QUFDSDs7QUFFSixXQUFPLFVBQVA7QUFFQSxDQVZEOztBQVlBLElBQU0saUJBQWlCLFNBQWpCLGNBQWlCLGFBQWM7O0FBRWpDLFFBQU0sTUFBTSxvQ0FBWjs7QUFFQSxRQUFNLFdBQVcsSUFBSSxRQUFKLEVBQWpCO0FBQ0EsYUFBUyxNQUFULENBQWdCLFdBQWhCLEVBQTZCLGlCQUFPLFFBQXBDO0FBQ0EsYUFBUyxNQUFULENBQWdCLGVBQWhCLEVBQWlDLGlCQUFPLFlBQXhDO0FBQ0EsYUFBUyxNQUFULENBQWdCLE1BQWhCLEVBQXdCLFVBQXhCO0FBQ0EsYUFBUyxNQUFULENBQWdCLFlBQWhCLEVBQThCLG9CQUE5QjtBQUNBLGFBQVMsTUFBVCxDQUFnQixjQUFoQixFQUFnQyxpQkFBTyxXQUF2Qzs7QUFFQSxVQUFRLEdBQVIsRUFBYTtBQUNULGdCQUFRLE1BREM7QUFFVCxjQUFNO0FBRkcsS0FBYixFQUlDLElBSkQsQ0FJTztBQUFBLGVBQVEsS0FBSyxJQUFMLEVBQVI7QUFBQSxLQUpQLEVBS0MsSUFMRCxDQUtPLFVBQUMsSUFBRCxFQUFVO0FBQ2IsZ0JBQVEsR0FBUixDQUFhLHFCQUFiLEVBQW9DLElBQXBDO0FBQ0gsS0FQRCxFQU9HLEtBUEgsQ0FPVSxVQUFXLEtBQVgsRUFBbUI7QUFDekIsZ0JBQVEsR0FBUixDQUFhLFVBQWIsRUFBeUIsS0FBekI7QUFDSCxLQVREO0FBV0gsQ0F0QkQ7O1FBd0JTLFEsR0FBQSxRO1FBQVUsVyxHQUFBLFc7Ozs7Ozs7O0FDOUNuQixJQUFNLFNBQVM7QUFDWCxnQkFBZ0IscUNBREw7QUFFWCxvQkFBZ0IsOEZBRkw7QUFHWCxtQkFBZ0I7QUFITCxDQUFmOztrQkFNZSxNOzs7Ozs7OztBQ05mLElBQU0sWUFBWSxTQUFaLFNBQVksR0FBTTs7QUFFcEIsWUFBUSxHQUFSLENBQVksV0FBWjtBQUVILENBSkQ7O2tCQU1lLFM7Ozs7Ozs7OztBQ05mOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBLElBQU0sTUFBTSxTQUFOLEdBQU0sR0FBTTs7QUFFZCxRQUFLLHVCQUFZLE1BQVosQ0FBTCxFQUEyQjs7QUFFdkI7O0FBRUEsZ0JBQVEsR0FBUixDQUFZLG9CQUFaOztBQUVBOztBQUdILEtBVEQsTUFTTzs7QUFFSCxnQkFBUSxHQUFSLENBQVksb0JBQVo7O0FBRUE7QUFFSDtBQUVKLENBbkJEOztrQkFxQmUsRzs7Ozs7Ozs7O0FDMUJmOzs7O0FBQ0E7Ozs7QUFFQSxJQUFNLGNBQWMsU0FBZCxXQUFjLEdBQU07O0FBRXRCLFFBQUksVUFBVSxTQUFTLGNBQVQsQ0FBd0IsTUFBeEIsQ0FBZDs7QUFFQSxZQUFRLGdCQUFSLENBQXlCLE9BQXpCLEVBQWtDLFlBQU07O0FBRXBDO0FBRUgsS0FKRCxFQUlHLEtBSkg7QUFNSCxDQVZEOztrQkFZZSxXOzs7OztBQ2ZmOzs7Ozs7QUFFQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImltcG9ydCBjb25maWcgZnJvbSAnLi9fY29uZmlnLmpzJztcblxuY29uc3QgaW5pdEF1dGggPSAoKSA9PiB7XG5cbiAgICBsZXQgYXV0aFVybCA9IGBodHRwczovL2F1dGgubW9uem8uY29tLz9jbGllbnRfaWQ9JHsgY29uZmlnLmNsaWVudElkIH0mcmVkaXJlY3RfdXJpPSR7IHJlZGlyZWN0VXJsIH0mcmVzcG9uc2VfdHlwZT1jb2RlJnN0YXRlPSR7IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMjMpLnN1YnN0cmluZyg0KSB9YDtcblxuICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGF1dGhVcmwpO1xuXG59O1xuXG5jb25zdCBnZXRBdXRoQ29kZSA9IGNvZGUgPT4ge1xuXG4gICAgbGV0IGFjY2Vzc0NvZGUgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaCkuZ2V0KCdjb2RlJyk7XG5cbiAgICBpZiAoIGFjY2Vzc0NvZGUgKSB7XG4gICAgICAgIGdldEFjY2Vzc1Rva2VuKCBhY2Nlc3NDb2RlICk7XG4gICAgfVxuXG5cdHJldHVybiBhY2Nlc3NDb2RlO1xuXG59O1xuXG5jb25zdCBnZXRBY2Nlc3NUb2tlbiA9IGFjY2Vzc0NvZGUgPT4ge1xuXG4gICAgY29uc3QgdXJsID0gJ2h0dHBzOi8vYXBpLm1vbnpvLmNvbS9vYXV0aDIvdG9rZW4nO1xuXG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxuICAgIGZvcm1EYXRhLmFwcGVuZCgnY2xpZW50X2lkJywgY29uZmlnLmNsaWVudElkKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2NsaWVudF9zZWNyZXQnLCBjb25maWcuY2xpZW50U2VjcmV0KTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2NvZGUnLCBhY2Nlc3NDb2RlKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2dyYW50X3R5cGUnLCAnYXV0aG9yaXphdGlvbl9jb2RlJyk7XG4gICAgZm9ybURhdGEuYXBwZW5kKCdyZWRpcmVjdF91cmknLCBjb25maWcucmVkaXJlY3RVcmwpO1xuXG4gICAgZmV0Y2ggKCB1cmwsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGJvZHk6IGZvcm1EYXRhXG4gICAgfSlcbiAgICAudGhlbiggZGF0YSA9PiBkYXRhLnRleHQoKSApXG4gICAgLnRoZW4oICh0ZXh0KSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCAnc3VjY2VzcywgcmVzcG9uc2U6ICcsIHRleHQgKVxuICAgIH0pLmNhdGNoKCBmdW5jdGlvbiAoIGVycm9yICkge1xuICAgICAgICBjb25zb2xlLmxvZyggJ2ZhaWxlZDogJywgZXJyb3IgKVxuICAgIH0pXG5cbn1cblxuZXhwb3J0IHsgaW5pdEF1dGgsIGdldEF1dGhDb2RlIH1cbiIsImNvbnN0IGNvbmZpZyA9IHtcbiAgICAnY2xpZW50SWQnICAgIDogJ29hdXRoMmNsaWVudF8wMDAwOVlYeDNuS0FsbU9sTmhuckxGJyxcbiAgICAnY2xpZW50U2VjcmV0JzogJ21uemNvbmYucXlzSE44OEtQQXBBdVVNem5aTDhOM2liMnRQR2pSNllvd1JYZ2htRUpDK1RqOGFvaWh6TnN6MUxKWWR4ZXA0Nk1yenZPR3E5VHNVOVNSSldmL3VNJyxcbiAgICAncmVkaXJlY3RVcmwnIDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCdcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29uZmlnOyIsImNvbnN0IGNvbm5lY3RlZCA9ICgpID0+IHtcblxuICAgIGNvbnNvbGUubG9nKCd3ZWxsIGRvbmUnKTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0ZWQ7IiwiaW1wb3J0IGNvbmZpZyBmcm9tICcuL19jb25maWcuanMnO1xuaW1wb3J0IHsgZ2V0QXV0aENvZGUgfSBmcm9tICcuL19hdXRoLmpzJztcbmltcG9ydCBpbml0Q29ubmVjdCBmcm9tICcuL19pbml0Q29ubmVjdC5qcyc7XG5pbXBvcnQgeyBjb25uZWN0ZWQgfSBmcm9tICcuL19jb25uZWN0ZWQuanMnO1xuXG5jb25zdCBhcHAgPSAoKSA9PiB7XG5cbiAgICBpZiAoIGdldEF1dGhDb2RlKCdjb2RlJykgKSB7XG5cbiAgICAgICAgLy8gY29ubmVjdGVkKCk7XG5cbiAgICAgICAgY29uc29sZS5sb2coJ3dlIGhhdmUgYXV0aCBjb2RlIScpO1xuXG4gICAgICAgIC8vIERvIHNvbWV0aGluZyBoZXJlIG9uY2Ugd2UgaGF2ZSBhdXRoIGFuZCBjbGVhbiBpdCB1cFxuXG5cbiAgICB9IGVsc2Uge1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCd3ZSBuZWVkIHRvIGNvbm5lY3QnKTtcblxuICAgICAgICBpbml0Q29ubmVjdCgpO1xuXG4gICAgfVxuXG59O1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7IiwiaW1wb3J0IGNvbmZpZyBmcm9tICcuL19jb25maWcuanMnO1xuaW1wb3J0IHsgaW5pdEF1dGggfSBmcm9tICcuL19hdXRoLmpzJztcblxuY29uc3QgaW5pdENvbm5lY3QgPSAoKSA9PiB7XG5cbiAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhdXRoJyk7XG5cbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXG4gICAgICAgIGluaXRBdXRoKCk7XG5cbiAgICB9LCBmYWxzZSk7XG5cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGluaXRDb25uZWN0OyIsImltcG9ydCBhcHAgZnJvbSAnLi9faW5pdC5qcyc7XG5cbmFwcCgpOyJdfQ=="}